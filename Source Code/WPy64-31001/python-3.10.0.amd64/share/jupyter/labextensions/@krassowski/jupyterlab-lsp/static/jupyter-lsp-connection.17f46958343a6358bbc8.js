(self.webpackChunk_krassowski_jupyterlab_lsp=self.webpackChunk_krassowski_jupyterlab_lsp||[]).push([[16],{7811:(e,t,i)=>{"use strict";i.r(t),i.d(t,{LSPConnection:()=>u,Method:()=>n,Provider:()=>l});var n,s=i(6168),o=i(4153),r=i(6988);!function(e){let t,i,n,s;!function(e){e.PUBLISH_DIAGNOSTICS="textDocument/publishDiagnostics",e.SHOW_MESSAGE="window/showMessage",e.LOG_TRACE="$/logTrace",e.LOG_MESSAGE="window/logMessage"}(t=e.ServerNotification||(e.ServerNotification={})),function(e){e.DID_CHANGE="textDocument/didChange",e.DID_CHANGE_CONFIGURATION="workspace/didChangeConfiguration",e.DID_OPEN="textDocument/didOpen",e.DID_SAVE="textDocument/didSave",e.INITIALIZED="initialized",e.SET_TRACE="$/setTrace"}(i=e.ClientNotification||(e.ClientNotification={})),function(e){e.REGISTER_CAPABILITY="client/registerCapability",e.SHOW_MESSAGE_REQUEST="window/showMessageRequest",e.UNREGISTER_CAPABILITY="client/unregisterCapability",e.WORKSPACE_CONFIGURATION="workspace/configuration"}(n=e.ServerRequest||(e.ServerRequest={})),function(e){e.COMPLETION="textDocument/completion",e.COMPLETION_ITEM_RESOLVE="completionItem/resolve",e.DEFINITION="textDocument/definition",e.DOCUMENT_HIGHLIGHT="textDocument/documentHighlight",e.DOCUMENT_SYMBOL="textDocument/documentSymbol",e.HOVER="textDocument/hover",e.IMPLEMENTATION="textDocument/implementation",e.INITIALIZE="initialize",e.REFERENCES="textDocument/references",e.RENAME="textDocument/rename",e.SIGNATURE_HELP="textDocument/signatureHelp",e.TYPE_DEFINITION="textDocument/typeDefinition"}(s=e.ClientRequest||(e.ClientRequest={}))}(n||(n={}));class c{constructor(e,t,i){this.connection=e,this.method=t,this.emitter=i}request(e){return this.emitter.log(h.client_requested,{method:this.method,message:e}),this.connection.sendRequest(this.method,e).then((t=>(this.emitter.log(h.result_for_client,{method:this.method,message:e}),t)))}}class a{constructor(e,t,i){this.connection=e,this.method=t,this.emitter=i,this.connection.onRequest(t,this.handle.bind(this)),this._handler=null}handle(e){if(this.emitter.log(h.server_requested,{method:this.method,message:e}),this._handler)return this._handler(e,this.emitter).then((e=>(this.emitter.log(h.response_for_server,{method:this.method,message:e}),e)))}setHandler(e){this._handler=e}clearHandler(){this._handler=null}}const l={TEXT_DOCUMENT_SYNC:"textDocumentSync",COMPLETION:"completionProvider",HOVER:"hoverProvider",SIGNATURE_HELP:"signatureHelpProvider",DECLARATION:"declarationProvider",DEFINITION:"definitionProvider",TYPE_DEFINITION:"typeDefinitionProvider",IMPLEMENTATION:"implementationProvider",REFERENCES:"referencesProvider",DOCUMENT_HIGHLIGHT:"documentHighlightProvider",DOCUMENT_SYMBOL:"documentSymbolProvider",CODE_ACTION:"codeActionProvider",CODE_LENS:"codeLensProvider",DOCUMENT_LINK:"documentLinkProvider",COLOR:"colorProvider",DOCUMENT_FORMATTING:"documentFormattingProvider",DOCUMENT_RANGE_FORMATTING:"documentRangeFormattingProvider",DOCUMENT_ON_TYPE_FORMATTING:"documentOnTypeFormattingProvider",RENAME:"renameProvider",FOLDING_RANGE:"foldingRangeProvider",EXECUTE_COMMAND:"executeCommandProvider",SELECTION_RANGE:"selectionRangeProvider",WORKSPACE_SYMBOL:"workspaceSymbolProvider",WORKSPACE:"workspace"};function d(e,t){const i={};for(let n of Object.values(e))i[n]=t(n);return i}var h;!function(e){e[e.client_notified_server=0]="client_notified_server",e[e.server_notified_client=1]="server_notified_client",e[e.server_requested=2]="server_requested",e[e.client_requested=3]="client_requested",e[e.result_for_client=4]="result_for_client",e[e.response_for_server=5]="response_for_server"}(h||(h={}));class u extends o.LspWsConnection{constructor(e){super(e),this.closing_manually=!1,this.logAllCommunication=!1,this.serverIdentifier=null==e?void 0:e.serverIdentifier,this.console=e.console.scope(this.serverIdentifier+" connection"),this.documentsToOpen=[],this.clientNotifications=this.constructNotificationHandlers(n.ClientNotification),this.serverNotifications=this.constructNotificationHandlers(n.ServerNotification)}log(e,t){this.logAllCommunication&&this.console.log(e,t)}constructNotificationHandlers(e){return d(e,(()=>new s.Signal(this)))}constructClientRequestHandler(e){return d(e,(e=>new c(this.connection,e,this)))}constructServerRequestHandler(e){return d(e,(e=>new a(this.connection,e,this)))}sendOpenWhenReady(e){this.isReady?this.sendOpen(e):this.documentsToOpen.push(e)}onServerInitialized(e){for(this.afterInitialized(),super.onServerInitialized(e);this.documentsToOpen.length;)this.sendOpen(this.documentsToOpen.pop())}afterInitialized(){for(const e of Object.values(n.ServerNotification)){const t=this.serverNotifications[e];this.connection.onNotification(e,(i=>{this.log(h.server_notified_client,{method:e,message:i}),t.emit(i)}))}for(const e of Object.values(n.ClientNotification))this.clientNotifications[e].connect(((t,i)=>{this.log(h.client_notified_server,{method:e,message:i}),this.connection.sendNotification(e,i)}));this.clientRequests=this.constructClientRequestHandler(n.ClientRequest),this.serverRequests=this.constructServerRequestHandler(n.ServerRequest),this.serverRequests["client/registerCapability"].setHandler((async e=>{e.registrations.forEach((e=>{try{this.serverCapabilities=(t=this.serverCapabilities,i=e,n=JSON.parse(JSON.stringify(t)),s=i.method,o=i.registerOptions,(r=s.substring(13)+"Provider")?(n[r]=!o||JSON.parse(JSON.stringify(o)),n):(console.warn("Could not register server capability.",i),null))}catch(e){console.error(e)}var t,i,n,s,o,r}))})),this.serverRequests["client/unregisterCapability"].setHandler((async e=>{e.unregisterations.forEach((e=>{var t,i,n;this.serverCapabilities=(t=this.serverCapabilities,i=e,delete(n=JSON.parse(JSON.stringify(t)))[i.method.substring(13)+"Provider"],n)}))})),this.serverRequests["workspace/configuration"].setHandler((async e=>e.items.map((e=>null))))}sendSelectiveChange(e,t){this._sendChange([e],t)}sendFullTextChange(e,t){this._sendChange([{text:e}],t)}isRenameSupported(){return!(!this.serverCapabilities||!this.serverCapabilities.renameProvider)}provides(e){return!(!this.serverCapabilities||!this.serverCapabilities[e])}async rename(e,t,i,n=!0){if(!this.isReady||!this.isRenameSupported())return;const s={textDocument:{uri:t.uri},position:{line:e.line,character:e.ch},newName:i},o=await this.connection.sendRequest("textDocument/rename",s);return n&&this.emit("renamed",o),o}connect(e){return super.connect(e),(0,r.EU)((()=>this.isConnected),-1).then((()=>{this.connection.onClose((()=>{this.isConnected=!1,this.emit("close",this.closing_manually)}))})).catch((()=>{console.error("Could not connect onClose signal")})),this}close(){try{this.closing_manually=!0,super.close()}catch(e){this.closing_manually=!1}}_sendChange(e,t){if(!this.isReady)return;this.openedUris.get(t.uri)||this.sendOpen(t);const i={textDocument:{uri:t.uri,version:t.version},contentChanges:e};this.connection.sendNotification("textDocument/didChange",i),t.version++}async getCompletionResolve(e){if(this.isReady&&this.isCompletionResolveProvider())return this.connection.sendRequest("completionItem/resolve",e)}isCompletionResolveProvider(){var e,t;return null===(t=null===(e=this.serverCapabilities)||void 0===e?void 0:e.completionProvider)||void 0===t?void 0:t.resolveProvider}}}}]);